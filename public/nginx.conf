#运行用户
user root;
#启动进程,通常设置成和cpu的数量相等
worker_processes 2;
#全局错误日志及PID文件
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
#工作模式及连接数上限
events {
    use epoll;
#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    worker_connections 1024;
}
#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
#设定日志格式
    access_log /var/log/nginx/access.log;
#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile on;
#tcp_nopush     on;
#连接超时时间
#keepalive_timeout  0;
    keepalive_timeout 65;
    tcp_nodelay on;
#开启gzip压缩
    gzip_http_version 1.0;
    gzip on;
#开启或关闭gzip on off　　
    gzip_static on;
#是否开启gzip静态资源
    gzip_disable "msie6";
#不使用gzip IE6
    gzip_min_length 1k;
#gzip压缩最小文件大小，超出进行压缩（自行调节）
    gzip_buffers 4 16k;
#buffer 不用修改
    gzip_comp_level 4;
#压缩级别:1-10，数字越大压缩的越好，时间也越长
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php;
#  压缩文件类型
    gzip_vary on;
#跟Squid等缓存服务有关，on的话会在Header里增加 "Vary: Accept-Encoding"
#设定请求缓冲
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
#设定mime类型,类型由mime.type文件定义
    include /etc/nginx/mime.types;
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
    default_type application/octet-stream;
}
